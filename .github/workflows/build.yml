name: Build

on:
  repository_dispatch:
  push:
  pull_request:
    branches: [ master ]
  release:
    types:
      - created

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  IDF_VERSION: v5.3.2

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        esp_target:
          - 'esp32'
          - 'esp32c6'
        build_type:
          - 'Release'
          - 'Debug'
    steps:
    - name: Pull ESP-IDF docker
      run: docker pull espressif/idf:$IDF_VERSION

    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout submodules
      run: git submodule update --init --depth 1 certificates components/arduino-esp32

    - name: Build
      run: |
        docker run --rm -v $PWD:/project -w /project espressif/idf:$IDF_VERSION cmake -B build -G Ninja -DIDF_TARGET=${{ matrix.esp_target }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        docker run --rm -v $PWD:/project -w /project espressif/idf:$IDF_VERSION cmake --build build

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        #name: nina-fw-${{ matrix.esp_target }}${{ matrix.build_type == 'Debug' && format('-{0}', matrix.build_type) || '' }}
        name: nina-fw-${{ matrix.esp_target }}-${{ matrix.build_type }}
        path: |
          build/nina-fw.bin

    - name: Prepare Release Asset
      if: github.event_name == 'release'
      run: cp build/nina-fw.bin nina-fw-${{ matrix.esp_target }}-${{ github.event.release.tag_name }}-${{ matrix.build_type }}.bin

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'release'
      with:
        files: |
          nina-fw-*.bin
